<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="10" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-11T12:38:14 GMT-05:00" name="Windows" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="609">
    <groups>
      <group name="Smoke">
        <method signature="BrowserType.chromebrowser(java.lang.String)[pri:0, instance:test.BrowserType@131774fe]" name="chromebrowser" class="test.BrowserType"/>
        <method signature="DesktopOSType.windowsdevice(java.lang.String)[pri:0, instance:test.DesktopOSType@c8c12ac]" name="windowsdevice" class="test.DesktopOSType"/>
        <method signature="MobileOSType.androiddevice()[pri:0, instance:test.MobileOSType@6adbc9d]" name="androiddevice" class="test.MobileOSType"/>
        <method signature="BrowserType.chromebrowser(java.lang.String)[pri:0, instance:test.BrowserType@14cd1699]" name="chromebrowser" class="test.BrowserType"/>
        <method signature="DesktopOSType.windowsdevice(java.lang.String)[pri:0, instance:test.DesktopOSType@77888435]" name="windowsdevice" class="test.DesktopOSType"/>
        <method signature="MobileOSType.androiddevice()[pri:0, instance:test.MobileOSType@73a1e9a9]" name="androiddevice" class="test.MobileOSType"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-11-11T12:38:14 GMT-05:00" name="WindowTest" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="259">
      <class name="test.MobileOSType">
        <test-method is-config="true" signature="bfClass()[pri:0, instance:test.MobileOSType@6adbc9d]" started-at="2023-11-11T12:38:14 GMT-05:00" name="bfClass" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfClass -->
        <test-method signature="androiddevice()[pri:0, instance:test.MobileOSType@6adbc9d]" started-at="2023-11-11T12:38:14 GMT-05:00" name="androiddevice" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- androiddevice -->
        <test-method signature="iOSMobiledevice()[pri:0, instance:test.MobileOSType@6adbc9d]" started-at="2023-11-11T12:38:14 GMT-05:00" name="iOSMobiledevice" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iOSMobiledevice -->
        <test-method is-config="true" signature="afClass()[pri:0, instance:test.MobileOSType@6adbc9d]" started-at="2023-11-11T12:38:14 GMT-05:00" name="afClass" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afClass -->
      </class> <!-- test.MobileOSType -->
      <class name="test.BrowserType">
        <test-method is-config="true" signature="bfTest()[pri:0, instance:test.BrowserType@131774fe]" started-at="2023-11-11T12:38:14 GMT-05:00" name="bfTest" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfTest -->
        <test-method signature="chromebrowser(java.lang.String)[pri:0, instance:test.BrowserType@131774fe]" started-at="2023-11-11T12:38:14 GMT-05:00" name="chromebrowser" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'CommonURL' is required by @Test on method chromebrowser but has not been marked @Optional or defined
in C:\Users\user\Documents\Neelu\eclipse_workspace\TestNGlearning\testngTestLevel.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'CommonURL' is required by @Test on method chromebrowser but has not been marked @Optional or defined
in C:\Users\user\Documents\Neelu\eclipse_workspace\TestNGlearning\testngTestLevel.xml
at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.handleParameters(Parameters.java:879)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:911)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chromebrowser -->
        <test-method signature="firefoxbrowser()[pri:0, instance:test.BrowserType@131774fe]" started-at="2023-11-11T12:38:14 GMT-05:00" name="firefoxbrowser" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firefoxbrowser -->
        <test-method signature="edgebrowser()[pri:0, instance:test.BrowserType@131774fe]" started-at="2023-11-11T12:38:14 GMT-05:00" name="edgebrowser" finished-at="2023-11-11T12:38:14 GMT-05:00" depends-on-methods="test.BrowserType.firefoxbrowser" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- edgebrowser -->
        <test-method is-config="true" signature="afTest()[pri:0, instance:test.BrowserType@131774fe]" started-at="2023-11-11T12:38:14 GMT-05:00" name="afTest" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afTest -->
      </class> <!-- test.BrowserType -->
      <class name="test.DesktopOSType">
        <test-method is-config="true" signature="bfMethod()[pri:0, instance:test.DesktopOSType@c8c12ac]" started-at="2023-11-11T12:38:14 GMT-05:00" name="bfMethod" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfMethod -->
        <test-method signature="iOSdevice()[pri:0, instance:test.DesktopOSType@c8c12ac]" started-at="2023-11-11T12:38:14 GMT-05:00" name="iOSdevice" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iOSdevice -->
        <test-method is-config="true" signature="afMethod()[pri:0, instance:test.DesktopOSType@c8c12ac]" started-at="2023-11-11T12:38:14 GMT-05:00" name="afMethod" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afMethod -->
        <test-method signature="windowsdevice(java.lang.String)[pri:0, instance:test.DesktopOSType@c8c12ac]" started-at="2023-11-11T12:38:14 GMT-05:00" name="windowsdevice" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'WindowsTestUrl' is required by @Test on method windowsdevice but has not been marked @Optional or defined
in C:\Users\user\Documents\Neelu\eclipse_workspace\TestNGlearning\testngTestLevel.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'WindowsTestUrl' is required by @Test on method windowsdevice but has not been marked @Optional or defined
in C:\Users\user\Documents\Neelu\eclipse_workspace\TestNGlearning\testngTestLevel.xml
at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.handleParameters(Parameters.java:879)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:911)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowsdevice -->
      </class> <!-- test.DesktopOSType -->
    </test> <!-- WindowTest -->
    <test started-at="2023-11-11T12:38:15 GMT-05:00" name="iOSTest" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="225">
      <class name="test.MobileOSType">
        <test-method is-config="true" signature="bfClass()[pri:0, instance:test.MobileOSType@73a1e9a9]" started-at="2023-11-11T12:38:15 GMT-05:00" name="bfClass" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfClass -->
        <test-method signature="androiddevice()[pri:0, instance:test.MobileOSType@73a1e9a9]" started-at="2023-11-11T12:38:15 GMT-05:00" name="androiddevice" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- androiddevice -->
        <test-method signature="iOSMobiledevice()[pri:0, instance:test.MobileOSType@73a1e9a9]" started-at="2023-11-11T12:38:15 GMT-05:00" name="iOSMobiledevice" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iOSMobiledevice -->
        <test-method is-config="true" signature="afClass()[pri:0, instance:test.MobileOSType@73a1e9a9]" started-at="2023-11-11T12:38:15 GMT-05:00" name="afClass" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afClass -->
      </class> <!-- test.MobileOSType -->
      <class name="test.BrowserType">
        <test-method is-config="true" signature="bfSuite()[pri:0, instance:test.BrowserType@14cd1699]" started-at="2023-11-11T12:38:14 GMT-05:00" name="bfSuite" finished-at="2023-11-11T12:38:14 GMT-05:00" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfSuite -->
        <test-method is-config="true" signature="bfTest()[pri:0, instance:test.BrowserType@14cd1699]" started-at="2023-11-11T12:38:15 GMT-05:00" name="bfTest" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfTest -->
        <test-method signature="chromebrowser(java.lang.String)[pri:0, instance:test.BrowserType@14cd1699]" started-at="2023-11-11T12:38:15 GMT-05:00" name="chromebrowser" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'CommonURL' is required by @Test on method chromebrowser but has not been marked @Optional or defined
in C:\Users\user\Documents\Neelu\eclipse_workspace\TestNGlearning\testngTestLevel.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'CommonURL' is required by @Test on method chromebrowser but has not been marked @Optional or defined
in C:\Users\user\Documents\Neelu\eclipse_workspace\TestNGlearning\testngTestLevel.xml
at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.handleParameters(Parameters.java:879)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:911)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chromebrowser -->
        <test-method signature="firefoxbrowser()[pri:0, instance:test.BrowserType@14cd1699]" started-at="2023-11-11T12:38:15 GMT-05:00" name="firefoxbrowser" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firefoxbrowser -->
        <test-method signature="edgebrowser()[pri:0, instance:test.BrowserType@14cd1699]" started-at="2023-11-11T12:38:15 GMT-05:00" name="edgebrowser" finished-at="2023-11-11T12:38:15 GMT-05:00" depends-on-methods="test.BrowserType.firefoxbrowser" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- edgebrowser -->
        <test-method is-config="true" signature="afTest()[pri:0, instance:test.BrowserType@14cd1699]" started-at="2023-11-11T12:38:15 GMT-05:00" name="afTest" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afTest -->
        <test-method is-config="true" signature="afSuite()[pri:0, instance:test.BrowserType@14cd1699]" started-at="2023-11-11T12:38:15 GMT-05:00" name="afSuite" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSuite -->
      </class> <!-- test.BrowserType -->
      <class name="test.DesktopOSType">
        <test-method is-config="true" signature="bfMethod()[pri:0, instance:test.DesktopOSType@77888435]" started-at="2023-11-11T12:38:15 GMT-05:00" name="bfMethod" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfMethod -->
        <test-method signature="iOSdevice()[pri:0, instance:test.DesktopOSType@77888435]" started-at="2023-11-11T12:38:15 GMT-05:00" name="iOSdevice" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iOSdevice -->
        <test-method is-config="true" signature="afMethod()[pri:0, instance:test.DesktopOSType@77888435]" started-at="2023-11-11T12:38:15 GMT-05:00" name="afMethod" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afMethod -->
        <test-method signature="windowsdevice(java.lang.String)[pri:0, instance:test.DesktopOSType@77888435]" started-at="2023-11-11T12:38:15 GMT-05:00" name="windowsdevice" finished-at="2023-11-11T12:38:15 GMT-05:00" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'WindowsTestUrl' is required by @Test on method windowsdevice but has not been marked @Optional or defined
in C:\Users\user\Documents\Neelu\eclipse_workspace\TestNGlearning\testngTestLevel.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'WindowsTestUrl' is required by @Test on method windowsdevice but has not been marked @Optional or defined
in C:\Users\user\Documents\Neelu\eclipse_workspace\TestNGlearning\testngTestLevel.xml
at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.handleParameters(Parameters.java:879)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:911)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowsdevice -->
      </class> <!-- test.DesktopOSType -->
    </test> <!-- iOSTest -->
  </suite> <!-- Windows -->
</testng-results>
